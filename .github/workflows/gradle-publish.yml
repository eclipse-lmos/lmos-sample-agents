# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
name: Publish to GitHub Packages
on:
  push:
    branches: [ main ]
permissions:
  packages: write
  contents: read
jobs:
  validation:
    name: "Gradle wrapper validation"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: gradle/actions/wrapper-validation@v4
  build:
    name: "Build"
    runs-on: ubuntu-latest
    env:
      REGISTRY_URL: ghcr.io
      REGISTRY_USERNAME: ${{ github.actor }}
      REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      REGISTRY_NAMESPACE: lmos-ai
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build with Gradle
        run: ./gradlew build
      - name: Build Modules with Gradle
        run: |
          ./gradlew build
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Discover modules
        run: |
          echo "Discovering modules..."
          
          MODULES=$(find . -maxdepth 2 -type f \( -name "build.gradle" -o -name "build.gradle.kts" \) -exec dirname {} \; | while read dir; do
            if [ -f "$dir/Dockerfile" ]; then
              # Remove ./ prefix from directory name
              echo "${dir#./}"
            fi
          done)

          if [ -z "$MODULES" ]; then
            echo "Error: No modules found!"
            exit 1
          fi

          echo "Found modules: $MODULES"
      - name: Build and Push Docker images
        run: |
          for module in "${modules[@]}"; do
            version=$(grep '^version=' $module/gradle.properties | awk -F= '{print $2}')
            docker build --build-arg VERSION=$version -f $module/Dockerfile -t ghcr.io/${{ github.repository }}/$module:$version $module
            docker push ghcr.io/${{ github.repository }}/$module:$version
          done
      - name: Publish Chart to GitHub Packages
        run: ./gradlew helmPush
